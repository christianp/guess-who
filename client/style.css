@import "fonts/Concrete/cmun-concrete.css";
@import "fonts/Sans/cmun-sans.css";

body {
    background: black;
    color: white;
    margin: 0;
    font-family: 'Computer Modern Concrete';
}

main {
  height: 100vh;
  display: grid;
}
.controls {
  align-self: end;
}

.container {
    display: grid;
    grid-gap: 3em;
    justify-content: center;
    justify-items: center;
}
.container.both {
    grid-template: "player-0 info-card player-1" / 1fr 20em 1fr;
}


.info-card {
    grid-area: info-card;
    padding: 1em;
    background: white;
    color: black;
    align-self: start;
    margin: 1em;
    display: grid;
    grid-template: 
        "image"
        "name"
        "description"
    ;
    grid-gap: 1em;
    border-radius: 2em;
}
.info-card.hidden {
    display: none;
}

.info-card > h1 {
    grid-area: name;
    margin: 0;
    text-align: center;
    font-size: 1.3em;
}
.info-card > h1 a {
    color: inherit;
    text-decoration: none;
}

.info-card > img {
    grid-area: image;
    height: 15em;
    width: 100%;
    object-fit: cover;
    object-position: top;
    border-radius: 1em 1em 0 0;
}
.info-card .description {
    grid-area: description;
    margin: 0;
    font-family: 'Computer Modern Sans';
}

.info-card .description p:first-child {
    margin-top: 0;
}
.info-card .description p:last-child {
    margin-bottom: 0;
}


.player {
    --card-hue: 240;
    font-size: 0.55vw;
    display: grid;
    grid-gap: 1em;
    grid-template-columns: auto auto;
    grid-template-areas: 
        "board"
        "chosen"
    ;
    justify-items: center;
    align-items: center;
}

.player.player-0 {
    --card-hue: 240;
    grid-area: player-0;
}
.player.player-1 {
    --card-hue: 120;
    grid-area: player-1;
}

.board {
    grid-area: board;
    display: grid;
    grid-gap: 1em;
    grid-auto-columns: min-content;
    grid-auto-rows: min-content;
    background: hsl(var(--card-hue),50%,30%);
    padding: 1em;
    border-radius: 1em;
}

.piece {
    transition: transform 1s, opacity 1s;
}
.board.me .piece {
    cursor: pointer;
}
.piece:not(.up) {
    transform: rotate3d(0,1,0,180deg);
    opacity: 0.2;
}

.card {
    display: grid;
    height: 12em;
    width: 8em;
    --name-fr: 1fr;
    grid-template: 
        "image" 5fr "name" var(--name-fr) / 1fr;
    justify-items: center;
    align-items: center;
    border-radius: 1.5em;
    --card-sat: 20%;
    --card-lum: 50%;
    --card-border: hsl(var(--card-hue),var(--card-sat),var(--card-lum));
    border: 0.5em solid var(--card-border);
    transition: grid-template 0.2s;
}

.card img {
    object-fit: cover;
    object-position: top;
    width: 100%;
    height: 100%;
    border-radius: 1em 1em 0 0;
    background: var(--card-border);
}
.card .name {
    border-radius: 0 0 1em 1em;
    background: white;
    width: 100%;
    height: 100%;
    color: black;
    font-weight: bold;
    display: grid;
    align-content: center;
    justify-content: center;
}

.player:not(.show-chosen-card) .chosen-card {
    visibility: hidden;
}

.chosen-card {
  grid-area: chosen;
  margin: 2em;
  background: hsl(var(--card-hue),50%,30%);
  padding: 1em;
  border-radius: 1em;
}

.controls button {
  transition: opacity 0.5s;
}


.controls:not(.always-visible) button:not(:hover) {
  opacity: 0;
  transition: opacity 0s;
}

.piece.up .card:hover {
    --card-sat: 100%;
    --card-lum: 70%;
    --name-fr: 2fr;
    animation: wobble alternate-reverse ease-in-out infinite 0.1s;    
}

@keyframes wobble {
    from {
        transform: rotate(1deg);
    }
    to {
        transform: rotate(-1deg);
    }
}
